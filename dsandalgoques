#### DS and Algo Questions

Here are some of the popular array-based coding interview questions for your practice:
How do you find the missing number in a given integer array of 1 to 100? (solution)
How do you find the duplicate number on a given integer array? (solution)
How do you find the largest and smallest number in an unsorted integer array? (solution)
How do you find all pairs of an integer array whose sum is equal to a given number? (solution)
How do you find duplicate numbers in an array if it contains multiple duplicates? (solution)
How are duplicates removed from a given array in Java? (solution)
How is an integer array sorted in place using the quicksort algorithm? (solution)
How do you remove duplicates from an array in place? (solution)
How do you reverse an array in place in Java? (solution)
How are duplicates removed from an array without using any library? (solution)
These questions will not only help you to develop your problem-solving skills but also improve your knowledge of array data structure.
If you need more advanced questions based upon array then you can see also see The Coding Interview Bootcamp: Algorithms + Data Structures, a bootcamp style course on algorithms, especially designed for 
interview preparation to get a job on technical giants like Google, 
Microsoft, Apple, Facebook etc.
And, if you feel 10 is not enough questions and you need more practice, then you can also check out this list of 30 array questions.
2. Linked List Programming Interview Questions
A linked list is another common data structure that complements the array data structure. Similar to the array, it is also a linear data structure and 
stores elements in a linear fashion.
However, unlike the array, it doesn’t store them in contiguous locations; instead, they are scattered everywhere in memory, which is connected to each other using nodes.
A linked list is nothing but a list of nodes where each node contains the value stored and the address of the next node.
Because of this structure, it’s easy to add and remove elements in a linked list, as you just need to change the link instead of creating the array, but the search is difficult and often requires O(n) time to find an element in the singly linked list.
This article provides more information on the difference between an array and linked list data structures.
It also comes in varieties like a singly linked list, which allows you to traverse in one direction (forward or reverse); a doubly linked list,
which allows you to traverse in both directions (forward and backward);
and finally, the circular linked list, which forms a circle.
In order to solve linked list-based questions, a good knowledge of recursion is important, because a linked list is a recursive data structure.
If you take one node from a linked list, the remaining data structure is 
still a linked list, and because of that, many linked list problems have
simpler recursive solutions than iterative ones.
Here are some of the most common and popular linked list interview questions and their solutions:
How do you find the middle element of a singly linked list in one pass? (solution)
How do you check if a given linked list contains a cycle? How do you find the starting node of the cycle? (solution)
How do you reverse a linked list? (solution)
How do you reverse a singly linked list without recursion? (solution)
How are duplicate nodes removed in an unsorted linked list? (solution)
How do you find the length of a singly linked list? (solution)
How do you find the third node from the end in a singly linked list? (solution)
How do you find the sum of two linked lists using Stack? (solution)
These questions will help you to develop your problem-solving skills as well 
as improve your knowledge of the linked list data structure.
If you are having trouble solving these linked list coding questions then I
suggest you refresh your data structure and algorithms skill by going 
through Data Structures and Algorithms: Deep Dive Using Java course.
You can also check out this list of 30 linked list interview questions for more practice questions.
3. String Coding Interview Questions
Along with array and linked list data structures, a string is another popular
topic on programming job interviews. I have never participated in a 
coding interview where no string-based questions were asked.
A good thing about the string is that if you know the array, you can solve string-based questions easily because strings are nothing but a character array.
So all the techniques you learn by solving array-based coding questions 
can be used to solve string programming questions as well.
Here is my list of frequently asked string coding questions from programming job interviews:
How do you print duplicate characters from a string? (solution)
How do you check if two strings are anagrams of each other? (solution)
How do you print the first non-repeated character from a string? (solution)
How can a given string be reversed using recursion? (solution)
How do you check if a string contains only digits? (solution)
How are duplicate characters found in a string? (solution)
How do you count a number of vowels and consonants in a given string? (solution)
How do you count the occurrence of a given character in a string? (solution)
How do you find all permutations of a string? (solution)
How do you reverse words in a given sentence without using any library method? (solution)
How do you check if two strings are a rotation of each other? (solution)
How do you check if a given string is a palindrome? (solution)
These questions help improve your knowledge of string as a data structure. If you can solve all these String questions without any help then you are in good shape.
For more advanced questions, I suggest you solve problems given in the Algorithm Design Manual by Steven Skiena, a book with the toughest algorithm questions.
If you need more practice, here is another list of 20 string coding questions.
4. Binary Tree Coding Interview Questions
So far, we have looked at only the linear data structure, but all 
information in the real world cannot be represented in linear fashion, 
and that’s where tree data structure helps.
Tree data structure is a data structure that allows you to store your data in a hierarchical fashion. Depending on how you store data, there are different types of trees, such as a binary tree, where each node has, at most, two child nodes.a
Along with its close cousin binary search tree, it’s also one of the most popular tree data structures. Therefore, you will find a lot of questions based on them, such as how to traverse them, count nodes, find depth, and check if they are balanced or not.
A key point to solving binary tree questions is a strong knowledge of theory, e.g. what is the size or depth of the binary tree, what is a leaf, and 
what is a node, as well as an understanding of the popular traversing 
algorithms, e.g. pre-, post-, and in-order traversal.
Here is a list of popular binary tree-based coding questions from software engineer or developer job interviews:
How is a binary search tree implemented? (solution)
How do you perform preorder traversal in a given binary tree? (solution)
How do you traverse a given binary tree in preorder without recursion? (solution)
How do you perform an inorder traversal in a given binary tree? (solution)
How do you print all nodes of a given binary tree using inorder traversal without recursion? (solution)
How do you implement a postorder traversal algorithm? (solution)
How do you traverse a binary tree in postorder traversal without recursion? (solution)
How are all leaves of a binary search tree printed? (solution)
How do you count a number of leaf nodes in a given binary tree? (solution)
How do you perform a binary search in a given array? (solution)
If you feel that your understanding of binary tree coding is inadequate 
and you can’t solve these questions on your own, I suggest you go back 
and pick a good data structure and algorithm course like From 0 to 1: Data Structures & Algorithms in Java.
If you need some more recommendations, here is my list of useful data structure algorithm books and courses to start with.
5. Miscellaneous Coding Interview Questions
Apart from data structure-based questions, most of the programming job 
interviews also ask algorithm, design, bit manipulation, and general 
logic-based questions, which I’ll describe in this section.
It’s important that you practice these concepts because sometimes they 
become tricky to solve in the actual interview. Having practiced them 
before not only makes you familiar with them but also gives you more 
confidence in explaining the solution to the interviewer.
How is a bubble sort algorithm implemented? (solution)
How is an iterative quicksort algorithm implemented? (solution)
How do you implement an insertion sort algorithm? (solution)
How is a merge sort algorithm implemented? (solution)
How do you implement a bucket sort algorithm? (solution)
How do you implement a counting sort algorithm? (solution)
How is a radix sort algorithm implemented? (solution)
How do you swap two numbers without using the third variable? (solution)
How do you check if two rectangles overlap with each other? (solution)
How do you design a vending machine? (solution)

How is a bubble sort algorithm implemented? (solution)
How is a merge sort algorithm implemented? (solution)
How do you count the occurrence of a given character in a string? (solution)
How do you print the first non-repeated character from a string? (solution)
How do you convert a given String into int like the atoi()? (solution)
How do you implement a bucket sort algorithm? (solution)
How do you implement a counting sort algorithm? (solution)
How do you remove duplicates from an array in place? (solution)
How do you reverse an array in place in Java? (solution)
How are duplicates removed from an array without using any library? (solution)
How is a radix sort algorithm implemented? (solution)
How do you swap two numbers without using the third variable? (solution)
How do you check if two rectangles overlap with each other? (solution)
How do you design a vending machine? (solution)
How do you find the missing number in a given integer array of 1 to 100? (solution)
How do you find the duplicate number on a given integer array? (solution)
How do you find duplicate numbers in an array if it contains multiple duplicates? (solution)
Difference between a stable and unstable sorting algorithm? (answer)
How is an iterative quicksort algorithm implemented? (solution)
How do you find the largest and smallest number in an unsorted integer array? (solution)
How do you reverse a linked list in place? (solution)
How to add an element at the middle of the linked list? (solution)
How do you sort a linked list in Java? (solution)
How do you find all pairs of an integer array whose sum is equal to a given number? (solution)
How do you implement an insertion sort algorithm? (solution)
How are duplicates removed from a given array in Java? (solution)
how to remove the duplicate character from String? (solution)
How to find the maximum occurring character in given String? (solution)
How is an integer array sorted in place using the quicksort algorithm? (solution)
How do you reverse a given string in place? (solution)
How do you print duplicate characters from a string? (solution)
How do you check if two strings are anagrams of each other? (solution)
How do you find all the permutations of a string? (solution)
How can a given string be reversed using recursion? (solution)
How do you check if a given string is a palindrome? (solution)
How do you find the length of the longest substring without repeating characters? (solution)
Given string str, How do you find the longest palindromic substring in str? (solution)
How do you check if a string contains only digits? (solution)
How to remove Nth Node from the end of a linked list? (solution)
How to merge two sorted linked list? (solution)
How to convert a sorted list to a binary search tree? (solution)
How do you find duplicate characters in a given string? (solution)
How do you count a number of vowels and consonants in a given string? (solution)
How do you reverse words in a given sentence without using any library method? (solution)
How do you check if two strings are a rotation of each other? (solution)
How to convert a byte array to String? (solution)
How do you remove a given character from String? (solution)
How do you find the middle element of a singly linked list in one pass? (solution)
How do you check if a given linked list contains a cycle? How do you find the starting node of the cycle? (solution)
How do you reverse a linked list? (solution)
How do you reverse a singly linked list without recursion? (solution)
How are duplicate nodes removed in an unsorted linked list? (solution)
How do you find the length of a singly linked list? (solution)
How do you find the third node from the end in a singly linked list? (solution)
How do you find the sum of two linked lists using Stack? (solution)
What is the difference between array and linked list? (answer)
How to remove duplicates from a sorted linked list? (solution)
How to find the node at which the intersection of two singly linked lists begins. (solution)
Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x. (solution)
How to check if a given linked list is a palindrome? (solution)
How to remove all elements from a linked list of integers which matches with given value? (solution)
How is a binary search tree implemented? (solution)
How do you perform preorder traversal in a given binary tree? (solution)
How do you traverse a given binary tree in preorder without recursion? (solution)
How do you perform an inorder traversal in a given binary tree? (solution)
How do you print all nodes of a given binary tree using inorder traversal without recursion? (solution)
How do you implement a postorder traversal algorithm? (solution)
How do you traverse a binary tree in postorder traversal without recursion? (solution)
How are all leaves of a binary search tree printed? (solution)
How do you count a number of leaf nodes in a given binary tree? (solution)
How do you perform a binary search in a given array? (solution)
How to Swap two numbers without using the third variable? (solution)
How to check if two rectangles overlap with each other? (solution)
How to design a Vending Machine? (solution)
How to implement an LRU Cache in your favorite programming language? (solution)
How to check if a given number is a Palindrome? (solution)
How to check if a given number is an Armstrong number? (solution)
How to find all prime factors of a given number? (solution)
How to check if a given number is positive or negative in Java? (solution)
How to find the largest prime factor of a given integral number? (solution)
How to print all prime numbers up to a given number? (solution)
How to print Floyd’s triangle? (solution)
How to print Pascal’s triangle? (solution)
How to calculate the square root of a given number? (solution)
How to check if the given number is a prime number? (solution)
How to add two numbers without using the plus operator in Java? (solution)
How to check if a given number is even/odd without using Arithmetic operator? (solution)
How to print a given Pyramid structure? (solution)
How to find the highest repeating world from a given file in Java? (solution)
How to reverse given Integer in Java? (solution)
How to convert a decimal number to binary in Java? (solution)
How to check if a given year is a leap year in Java? (solution)
Can you implement a Binary search Algorithm without recursion? (solution)
Difference between a stable and unstable sorting algorithm? (answer)
What is Depth First Search Algorithm for a binary tree? (solution)
How is an iterative quicksort algorithm implemented? (solution)
How do you implement an insertion sort algorithm? (solution)
How is a merge sort algorithm implemented? (solution)
What is the difference between Comparison and Non-Comparison Sorting Algorithms? (answer)
How do implement Sieve of Eratosthenes Algorithms for Prime Number? (solution)
